//! Configuration constants for K230 firmware encryption and signing.

// Magic bytes for K230 image
pub const MAGIC: &str = "K230";
// Version of the firmware format
pub const VERSION: &[u8] = &[0, 0, 0, 0];

// AES-related parameters
pub const INITIAL_AES_IV: &[u8] = &[
    0x9f, 0xf1, 0x85, 0x63, 0xb9, 0x78, 0xec, 0x28, 0x1b, 0x3f, 0x27, 0x94,
];
pub const INITIAL_AES_KEY: &[u8] = &[
    0x24, 0x50, 0x1a, 0xd3, 0x84, 0xe4, 0x73, 0x96, 0x3d, 0x47, 0x6e, 0xdc, 0xfe, 0x08, 0x20, 0x52,
    0x37, 0xac, 0xfd, 0x49, 0xb5, 0xb8, 0xf3, 0x38, 0x57, 0xf8, 0x11, 0x4e, 0x86, 0x3f, 0xec, 0x7f,
];
// Additional authenticated data for AES-GCM
pub const ADD_AUTH_DATA: &[u8] = &[];

// RSA modulus (256 bytes)
pub const N: &[u8] = &[
    0xce, 0xa8, 0x04, 0x75, 0x32, 0x4c, 0x1d, 0xc8, 0x34, 0x78, 0x27, 0x81, 0x8d, 0xa5, 0x8b, 0xac,
    0x06, 0x9d, 0x34, 0x19, 0xc6, 0x14, 0xa6, 0xea, 0x1a, 0xc6, 0xa3, 0xb5, 0x10, 0xdc, 0xd7, 0x2c,
    0xc5, 0x16, 0x95, 0x49, 0x05, 0xe9, 0xfe, 0xf9, 0x08, 0xd4, 0x5e, 0x13, 0x00, 0x6a, 0xdf, 0x27,
    0xd4, 0x67, 0xa7, 0xd8, 0x3c, 0x11, 0x1d, 0x1a, 0x5d, 0xf1, 0x5e, 0xf2, 0x93, 0x77, 0x1a, 0xef,
    0xb9, 0x20, 0x03, 0x2a, 0x5b, 0xb9, 0x89, 0xf8, 0xe4, 0xf5, 0xe1, 0xb0, 0x50, 0x93, 0xd3, 0xf1,
    0x30, 0xf9, 0x84, 0xc0, 0x7a, 0x77, 0x2a, 0x36, 0x83, 0xf4, 0xdc, 0x6f, 0xb2, 0x8a, 0x96, 0x81,
    0x5b, 0x32, 0x12, 0x3c, 0xcd, 0xd1, 0x39, 0x54, 0xf1, 0x9d, 0x5b, 0x8b, 0x24, 0xa1, 0x03, 0xe7,
    0x71, 0xa3, 0x4c, 0x32, 0x87, 0x55, 0xc6, 0x5e, 0xd6, 0x4e, 0x19, 0x24, 0xff, 0xd0, 0x4d, 0x30,
    0xb2, 0x14, 0x2c, 0xc2, 0x62, 0xf6, 0xe0, 0x04, 0x8f, 0xef, 0x6d, 0xbc, 0x65, 0x2f, 0x21, 0x47,
    0x9e, 0xa1, 0xc4, 0xb1, 0xd6, 0x6d, 0x28, 0xf4, 0xd4, 0x6e, 0xf7, 0x18, 0x5e, 0x39, 0x0c, 0xbf,
    0xa2, 0xe0, 0x23, 0x80, 0x58, 0x2f, 0x31, 0x88, 0xbb, 0x94, 0xeb, 0xbf, 0x05, 0xd3, 0x14, 0x87,
    0xa0, 0x9a, 0xff, 0x01, 0xfc, 0xbb, 0x4c, 0xd4, 0xbf, 0xd1, 0xf0, 0xa8, 0x33, 0xb3, 0x8c, 0x11,
    0x81, 0x3c, 0x84, 0x36, 0x0b, 0xb5, 0x3c, 0x7d, 0x44, 0x81, 0x03, 0x1c, 0x40, 0xba, 0xd8, 0x71,
    0x3b, 0xb6, 0xb8, 0x35, 0xcb, 0x08, 0x09, 0x8e, 0xd1, 0x5b, 0xa3, 0x1e, 0xe4, 0xba, 0x72, 0x8a,
    0x8c, 0x8e, 0x10, 0xf7, 0x29, 0x4e, 0x1b, 0x41, 0x63, 0xb7, 0xae, 0xe5, 0x72, 0x77, 0xbf, 0xd8,
    0x81, 0xa6, 0xf9, 0xd4, 0x3e, 0x02, 0xc6, 0x92, 0x5a, 0xa3, 0xa0, 0x43, 0xfb, 0x7f, 0xb7, 0x8d,
];
// RSA public exponent
pub const E: &str = "0x260445";
// RSA private exponent (256 bytes)
pub const D: &[u8] = &[
    0x09, 0x97, 0x63, 0x4c, 0x47, 0x7c, 0x1a, 0x03, 0x9d, 0x44, 0xc8, 0x10, 0xb2, 0xaa, 0xa3, 0xc7,
    0x86, 0x2b, 0x0b, 0x88, 0xd3, 0x70, 0x82, 0x72, 0xe1, 0xe1, 0x5f, 0x66, 0xfc, 0x93, 0x89, 0x70,
    0x9f, 0x8a, 0x11, 0xf3, 0xea, 0x6a, 0x5a, 0xf7, 0xef, 0xfa, 0x2d, 0x01, 0xc1, 0x89, 0xc5, 0x0f,
    0x0d, 0x5b, 0xcb, 0xe3, 0xfa, 0x27, 0x2e, 0x56, 0xcf, 0xc4, 0xa4, 0xe1, 0xd3, 0x88, 0xa9, 0xdc,
    0xd6, 0x5d, 0xf8, 0x62, 0x89, 0x02, 0x55, 0x6c, 0x8b, 0x6b, 0xb6, 0xa6, 0x41, 0x70, 0x9b, 0x5a,
    0x35, 0xdd, 0x26, 0x22, 0xc7, 0x3d, 0x46, 0x40, 0xbf, 0xa1, 0x35, 0x9d, 0x0e, 0x76, 0xe1, 0xf2,
    0x19, 0xf8, 0xe3, 0x3e, 0xb9, 0xbd, 0x0b, 0x59, 0xec, 0x19, 0x8e, 0xb2, 0xfc, 0xca, 0xae, 0x03,
    0x46, 0xbd, 0x8b, 0x40, 0x1e, 0x12, 0xe3, 0xc6, 0x7c, 0xb6, 0x29, 0x56, 0x9c, 0x18, 0x5a, 0x2e,
    0x0f, 0x35, 0xa2, 0xf7, 0x41, 0x64, 0x4c, 0x1c, 0xca, 0x5e, 0xbb, 0x13, 0x9d, 0x77, 0xa8, 0x9a,
    0x29, 0x53, 0xfc, 0x5e, 0x30, 0x04, 0x8c, 0x0e, 0x61, 0x9f, 0x07, 0xc8, 0xd2, 0x1d, 0x1e, 0x56,
    0xb8, 0xaf, 0x07, 0x19, 0x3d, 0x0f, 0xdf, 0x3f, 0x49, 0xcd, 0x49, 0xf2, 0xef, 0x31, 0x38, 0xb5,
    0x13, 0x88, 0x62, 0xf1, 0x47, 0x0b, 0xd2, 0xd1, 0x6e, 0x34, 0xa2, 0xb9, 0xe7, 0x77, 0x7a, 0x6c,
    0x8c, 0x8d, 0x4c, 0xb9, 0x4b, 0x4e, 0x8b, 0x5d, 0x61, 0x6c, 0xd5, 0x39, 0x37, 0x53, 0xe7, 0xb0,
    0xf3, 0x1c, 0xc7, 0xda, 0x55, 0x9b, 0xa8, 0xe9, 0x8d, 0x88, 0x89, 0x14, 0xe3, 0x34, 0x77, 0x3b,
    0xaf, 0x49, 0x8a, 0xd8, 0x8d, 0x96, 0x31, 0xeb, 0x5f, 0xe3, 0x2e, 0x53, 0xa4, 0x14, 0x5b, 0xf0,
    0xba, 0x54, 0x8b, 0xf2, 0xb0, 0xa5, 0x0c, 0x63, 0xf6, 0x7b, 0x14, 0xe3, 0x98, 0xa3, 0x4b, 0x0d,
];

// SM4 parameters
pub const SM4_KEY: &[u8] = &[
    0x01, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef, 0xfe, 0xdc, 0xba, 0x98, 0x76, 0x54, 0x32, 0x10,
];
pub const SM4_IV: &[u8] = &[
    0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,
];

// SM2 private key (32 bytes)
pub const PRIVATE_KEY: &[u8] = &[
    0x39, 0x45, 0x20, 0x8f, 0x7b, 0x21, 0x44, 0xb1, 0x3f, 0x36, 0xe3, 0x8a, 0xc6, 0xd3, 0x9f, 0x95,
    0x88, 0x93, 0x93, 0x69, 0x28, 0x60, 0xb5, 0x1a, 0x42, 0xfb, 0x81, 0xef, 0x4d, 0xf7, 0xc5, 0xb8,
];

// X coordinate of SM2 public key (32 bytes)
pub const PUBLIC_KEY_X: &[u8] = &[
    0x09, 0xf9, 0xdf, 0x31, 0x1e, 0x54, 0x21, 0xa1, 0x50, 0xdd, 0x7d, 0x16, 0x1e, 0x4b, 0xc5, 0xc6,
    0x72, 0x17, 0x9f, 0xad, 0x18, 0x33, 0xfc, 0x07, 0x6b, 0xb0, 0x8f, 0xf3, 0x56, 0xf3, 0x50, 0x20,
];

// Y coordinate of SM2 public key (32 bytes)
pub const PUBLIC_KEY_Y: &[u8] = &[
    0xcc, 0xea, 0x49, 0x0c, 0xe2, 0x67, 0x75, 0xa5, 0x2d, 0xc6, 0xea, 0x71, 0x8c, 0xc1, 0xaa, 0x60,
    0x0a, 0xed, 0x05, 0xfb, 0xf3, 0x5e, 0x08, 0x4a, 0x66, 0x32, 0xf6, 0x07, 0x2d, 0xa9, 0xad, 0x13,
];

// Complete SM2 public key (X and Y coordinates, 64 bytes)
pub const PUBLIC_KEY: &[u8] = &[
    // X coordinate of SM2 public key (32 bytes)
    0x09, 0xf9, 0xdf, 0x31, 0x1e, 0x54, 0x21, 0xa1, 0x50, 0xdd, 0x7d, 0x16, 0x1e, 0x4b, 0xc5, 0xc6,
    0x72, 0x17, 0x9f, 0xad, 0x18, 0x33, 0xfc, 0x07, 0x6b, 0xb0, 0x8f, 0xf3, 0x56, 0xf3, 0x50, 0x20,
    // Y coordinate of SM2 public key (32 bytes)
    0xcc, 0xea, 0x49, 0x0c, 0xe2, 0x67, 0x75, 0xa5, 0x2d, 0xc6, 0xea, 0x71, 0x8c, 0xc1, 0xaa, 0x60,
    0x0a, 0xed, 0x05, 0xfb, 0xf3, 0x5e, 0x08, 0x4a, 0x66, 0x32, 0xf6, 0x07, 0x2d, 0xa9, 0xad, 0x13,
];

// Additional SM2 parameter (32 bytes)
pub const K: &[u8] = &[
    0x59, 0x27, 0x6e, 0x27, 0xd5, 0x06, 0x86, 0x1a, 0x16, 0x68, 0x0f, 0x3a, 0xd9, 0xc0, 0x2d, 0xcc,
    0xef, 0x3c, 0xc1, 0xfa, 0x3c, 0xdb, 0xe4, 0xce, 0x6d, 0x54, 0xb8, 0x0d, 0xea, 0xc1, 0xbc, 0x21,
];
// Identifier string
pub const ID: &str = "1234567812345678";
// Length of the identifier (128 bytes)
pub const ID_LEN: &[u8] = &[0x00, 0x80];
